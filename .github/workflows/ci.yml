name: Package CI

on: pull_request

# When pushing to the same branch fast, only run latest.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.11"
  POETRY_VERSION: "1.5.1"
  PRECOMMIT_VERSION: "2.20.0"

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache pre-commit
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-precommit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Install pre-commit
        run: pip install pre-commit==${{ env.PRECOMMIT_VERSION }}

      - name: Check linting
        run: pre-commit run --all-files

      - name: Install yamllint
        run: sudo apt-get install yamllint

  unit_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: CPU info
        run: lscpu

      - name: Configure Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-v2-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-root --without pre-commit

      - name: Install library
        run: poetry install --without pre-commit

      - name: Run tests
        run: poetry run pytest tests/unit
